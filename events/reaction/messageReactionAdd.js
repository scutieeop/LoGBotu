const { EmbedBuilder } = require('discord.js');async function handleReactionRole(client, reaction, user, isAdding) {  if (!client.config.reactionRoles) return;  const { message } = reaction;  const emoji = reaction.emoji.id ? `${reaction.emoji.name}:${reaction.emoji.id}` : reaction.emoji.name;  const reactionRole = client.config.reactionRoles.find(rr =>     rr.messageId === message.id && rr.emoji === emoji  );  if (!reactionRole) return;  const guild = message.guild;  const member = guild.members.cache.get(user.id) || await guild.members.fetch(user.id).catch(() => null);  if (!member) return;  const role = guild.roles.cache.get(reactionRole.roleId);  if (!role) return;  try {    if (isAdding) {      if (!member.roles.cache.has(role.id)) {        await member.roles.add(role, 'Tepki rol sisteminden eklendi');        await client.logger.guild_sendLog('role', {          guildId: guild.id,          title: '✅ Tepki Rolü Verildi',          color: client.config.colors.success,          thumbnail: user.displayAvatarURL({ dynamic: true }),          fields: [            { name: 'Kullanıcı', value: `<@${user.id}> (${user.tag})`, inline: true },            { name: 'Verilen Rol', value: `<@&${role.id}> (${role.name})`, inline: true },            { name: 'Emoji', value: reaction.emoji.toString(), inline: true },            { name: 'Mesaj Bağlantısı', value: `[Mesaja Git](${message.url})`, inline: true }          ],          footer: `${new Date().toLocaleString()}`,          username: `${guild.name} - Tepki Rol`,          avatarURL: guild.iconURL({ dynamic: true })        });      }    } else {      if (member.roles.cache.has(role.id)) {        await member.roles.remove(role, 'Tepki rol sisteminden kaldırıldı');        await client.logger.guild_sendLog('role', {          guildId: guild.id,          title: '❌ Tepki Rolü Kaldırıldı',          color: client.config.colors.error,          thumbnail: user.displayAvatarURL({ dynamic: true }),          fields: [            { name: 'Kullanıcı', value: `<@${user.id}> (${user.tag})`, inline: true },            { name: 'Kaldırılan Rol', value: `<@&${role.id}> (${role.name})`, inline: true },            { name: 'Emoji', value: reaction.emoji.toString(), inline: true },            { name: 'Mesaj Bağlantısı', value: `[Mesaja Git](${message.url})`, inline: true }          ],          footer: `${new Date().toLocaleString()}`,          username: `${guild.name} - Tepki Rol`,          avatarURL: guild.iconURL({ dynamic: true })        });      }    }  } catch (error) {    console.error(`Tepki rolü hatası (${isAdding ? 'ekleme' : 'kaldırma'}):`, error);  }}module.exports = {  name: 'messageReactionAdd',  async execute(client, reaction, user) {    if (user.bot) return;    if (reaction.partial) {      try {        await reaction.fetch();      } catch (error) {        console.error('Tepki getirilirken hata oluştu:', error);        return;      }    }    const message = reaction.message;    if (message.partial) {      try {        await message.fetch();      } catch (error) {        console.error('Mesaj getirilirken hata oluştu:', error);        return;      }    }    if (!message.guild) return;    await handleReactionRole(client, reaction, user, true);  },  handleReactionRole}; 