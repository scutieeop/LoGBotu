const { EmbedBuilder, PermissionFlagsBits } = require('discord.js');const fs = require('fs');module.exports = {  name: 'logayarla',  description: 'Belirli log türlerini aktif veya pasif hale getirir',  async execute(message, args, client) {    if (!message.member.permissions.has(PermissionFlagsBits.Administrator)) {      return message.reply('Bu komutu kullanmak için yönetici yetkisine sahip olmanız gerekiyor.');    }    if (args.length < 2) {      return message.reply(`**Log Ayarlama Komutu**Kullanım: \`.logayarla [log-türü] [açık/kapalı]\`**Geçerli Log Türleri:**\`mesaj\` - Mesaj gönderme, silme, düzenleme logları\`uye\` - Sunucuya giriş, çıkış, yasaklama logları\`ses\` - Ses kanalı aktivite logları\`kanal\` - Kanal oluşturma, silme, düzenleme logları\`rol\` - Rol oluşturma, silme, düzenleme logları\`emoji\` - Emoji ekleme, silme, düzenleme logları\`davet\` - Davet oluşturma, kullanım logları\`tumu\` - Tüm log türlerini aynı anda ayarlar      `);    }    const logType = args[0].toLowerCase();    const state = args[1].toLowerCase();    if (state !== 'açık' && state !== 'kapalı' && state !== 'aktif' && state !== 'pasif' && state !== 'aç' && state !== 'kapat') {      return message.reply('❌ Geçersiz durum. `açık` veya `kapalı` kullanın.');    }    if (!client.config.logSetup) {      client.config.logSetup = {        enabled: {}      };    }    if (!client.config.logSetup.enabled) {      client.config.logSetup.enabled = {};    }    const isEnabled = (state === 'açık' || state === 'aktif' || state === 'aç');    const validTypes = ['mesaj', 'uye', 'ses', 'kanal', 'rol', 'emoji', 'davet', 'tumu'];    if (!validTypes.includes(logType) && logType !== 'tumu') {      return message.reply(`❌ Geçersiz log türü. Geçerli türler: ${validTypes.join(', ')}`);    }    if (logType === 'tumu') {      for (const type of validTypes) {        if (type !== 'tumu') {          client.config.logSetup.enabled[type] = isEnabled;        }      }    } else {      client.config.logSetup.enabled[logType] = isEnabled;    }    try {      await updateConfig(client);      const embed = new EmbedBuilder()        .setTitle('✅ Log Ayarları Güncellendi')        .setColor(isEnabled ? '#43B581' : '#FF5555')        .setDescription(`**${logType === 'tumu' ? 'Tüm log türleri' : `"${logType}" log türü`}** ${isEnabled ? 'aktif' : 'pasif'} hale getirildi.`)        .setFooter({ text: `${message.author.tag} tarafından ayarlandı` })        .setTimestamp();      return message.reply({ embeds: [embed] });    } catch (error) {      console.error('Log ayarları güncellenirken hata:', error);      return message.reply('❌ Log ayarlarını güncellerken bir hata oluştu.');    }  }};async function updateConfig(client) {  return new Promise((resolve, reject) => {    const configPath = './config/config.js';    let configContent = `module.exports = ${JSON.stringify(client.config, null, 2)};`;    fs.writeFile(configPath, configContent, (err) => {      if (err) return reject(err);      resolve();    });  });} 